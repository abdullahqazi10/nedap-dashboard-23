package utwente.nedap.team23.nedapDashboard.testing;


import static org.junit.Assert.assertEquals;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.WebTarget;


import org.junit.Before;
import org.junit.Test;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;



public class StatusCodesTesting implements APITesting {
	
	private Client client;
	private WebTarget restTarget;
	private String jwt;		// once we have one its valid for 8 hrs
	
	@Before
	public void setup() {
		
		client = ClientBuilder.newClient();
		restTarget = client.target(DOMAIN + "dashboard/rest/v1/");
		Response response = client.target(DOMAIN + "dashboard/v1/oauth/token")		// get Token
				.request().header("Authorization", "Basic " + TECHNICIAN).get();
		jwt = response.getHeaderString("Bearer"); 									// without token no access to any of the resources
	}
	
	
	@Test
	public void statusCode200Test() {
		
		System.out.println("dnkjwbiwnw: " + restTarget);
		// Some calls to endpoints
		Response response = restTarget.path("organizations")
				.request(MediaType.APPLICATION_JSON).header("Bearer", jwt).get();
		assertEquals(200, response.getStatus());
		
		response = restTarget.path("organizations/jobs").request(MediaType.APPLICATION_JSON).get();
		assertEquals(200, response.getStatus());
		
		response = restTarget.path("organizations/21844/jobs/4898794/executions/4943633/step-executions")
				.request(MediaType.APPLICATION_JSON).get();
		assertEquals(200, response.getStatus());
		
	}
	
	
	
//	@Test
//	// No content.... if hard credentials correct - request for token
//	public void statusCode204Test() {
//		
//		Response response = client.target(DOMAIN + "dashboard/v1/oauth/token")
//				.request().header("Authorization", "Basic " + TECHNICIAN).get();
//		System.out.println(response.getStatus());
//		assertEquals(204, response.getStatus());
//		
//	}
	
//	
//	@Test
//	// Unauthorized if request without token or without hard credentials
//	public void statusCode401Test() {
//		
//		// without credentials
//		Response response = client.target(DOMAIN + "dashboard/v1/oauth/token")
//				.request().get();
//		assertEquals(401, response.getStatus());
//		
//		// without token
//		response = restTarget.path("organizations/accounts").request().get();
//		assertEquals(401, response.getStatus());
//		
//		
//	}
	
//	@Test
//	// Forbidden if request with incorrect credentials
//	public void statusCode403Test() {
//		
//		// without credentials
//		Response response = client.target(DOMAIN + "dashboard/v1/oauth/token")
//				.request().header("Authorization", "Basic " + WRONGCREDENTIALS).get();
//		assertEquals(response.getStatus(), 403);
//	}
}
